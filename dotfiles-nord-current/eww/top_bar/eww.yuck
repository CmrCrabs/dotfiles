(defwindow top_bar
  :stacking "fg"
  :windowtype "dock"
  :wm-ignore true
  :geometry (geometry :width "96%" 
                      :height "5%"
                      :x "0%"
                      :y "2%"
                      :anchor "top right"
                      
            )
  (top_layout)
)

;; Variables
(defpoll time 
  :interval "5s"
  :initial `date +'{"hour":"%H","min":"%M"}'`
  `date +'{"hour":"%H","min":"%M"}'`
)
(defpoll net 
  :interval "50s"
  :initial `N/A`
  `nmcli -t -f SIGNAL,ACTIVE device wifi \
    | awk -F':' '{if($2=="yes")print$1}'`
)

;; Layout

(defwidget top_layout []
  (box :class "layout-box" 
       :space-evenly false 
       :orientation "vertical"
  
    (box :valign "start" 
         :space-evenly false 
         :spacing 25
      (_sundial)
      (label :text "|" :class "sep")
      (_battery :status {EWW_BATTERY.BAT0.status}
                :battery {EWW_BATTERY.BAT0.capacity}
                :charge "" 
                :one "" 
                :two "" 
                :three "" 
                :four ""
                :five "" 
                :six "" 
                :seven ""
      )
      (label :text "|" :class "sep")
      (_network :strength net :offline "󰤮" :excellent "󰤨" :good "󰤥"
                :okay "󰤢" :slow "󰤟"
      )
      (label :text "|" :class "sep")
      (button :onclick "eww close powermenu" 
              :class "close-btn" "󰱝"
      )
    )
  )
)

(defwidget _battery [battery status one two three
                    four five six seven charge]
  (box :class "bat-box" :space-evenly false :spacing 8
    (label :text {status == 'Charging' ? charge :
      battery < 15 ? seven :
        battery < 30 ? six :
          battery < 45 ? five :
            battery < 60 ? four :
              battery < 75 ? three :
                battery < 95 ? two : one}
    )
  )
)

(defwidget _network [strength offline excellent
                    good okay slow]
  (box :class "net-box"
       :space-evenly false
       :spacing 8
    (label :text {strength == "" ? offline :
      strength < 26 ? slow :
        strength < 51 ? okay :
          strength < 76 ? good : excellent}
    )
  )
)

(defwidget _sundial []
  (label :class "sundial-lbl" :halign "end" :hexpand true
         :text {time.hour >= 2 && time.hour <= 4 ? "Early Morning" :
               time.hour <= 5 ? "Dawn" :
               time.hour >= 6
                && (time.hour <= 8 && time.min <= 59)
                  ? "Morning" :
               time.hour >= 9
                 && (time.hour <= 11 && time.min <= 59)
                   ? "Late Morning" :
               time.hour == 12 && time.min <= 29
                 ? "Midday" :
               time.hour >= 12 && time.hour <= 16
                 ? "Afternoon" :
               time.hour > 16 && time.hour <= 17
                 ? "Late Afternoon" :
               (time.hour >= 17 && time.min <= 1)
                 || (time.hour <= 18 && time.min <= 20)
                   ? "Early Evening" :
               time.hour >= 18 && time.hour <= 19
                 ? "Dusk" :
               time.hour > 19 && time.hour <= 21
                 ? "Late Evening" :
               time.hour > 21 ? "Night" : "Midnight"}
  )
)



